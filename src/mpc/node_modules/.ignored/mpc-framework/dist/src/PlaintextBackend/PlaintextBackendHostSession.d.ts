import { BackendSession, Circuit, MpcSettings } from "mpc-framework-common";
export default class PlaintextBackendHostSession implements BackendSession {
    circuit: Circuit;
    mpcSettings: MpcSettings;
    name: string;
    input: Record<string, unknown>;
    send: (to: string, msg: Uint8Array) => void;
    outputPromise: Promise<Record<string, unknown>>;
    combinedInputs: {
        promise: Promise<Record<string, unknown>>;
        resolve: (value: Record<string, unknown>) => void;
        reject: (reason?: any) => void;
    };
    partialCombinedInputs: Record<string, unknown>;
    peerInputsReceived: Set<string>;
    constructor(circuit: Circuit, mpcSettings: MpcSettings, name: string, input: Record<string, unknown>, send: (to: string, msg: Uint8Array) => void);
    run(): Promise<Record<string, unknown>>;
    handleMessage(from: string, msg: Uint8Array): void;
    output(): Promise<Record<string, unknown>>;
}
//# sourceMappingURL=PlaintextBackendHostSession.d.ts.map