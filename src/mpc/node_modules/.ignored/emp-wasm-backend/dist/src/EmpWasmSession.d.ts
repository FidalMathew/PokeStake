import { BackendSession, Circuit, MpcSettings } from "mpc-framework-common";
import { BufferQueue } from "emp-wasm";
export default class EmpWasmSession implements BackendSession {
    circuit: Circuit;
    mpcSettings: MpcSettings;
    input: Record<string, unknown>;
    send: (to: string, msg: Uint8Array) => void;
    isAlice: boolean;
    peerName: string;
    bq: BufferQueue;
    result: {
        promise: Promise<Record<string, unknown>>;
        resolve: (value: Record<string, unknown>) => void;
        reject: (reason: any) => void;
    };
    constructor(circuit: Circuit, mpcSettings: MpcSettings, input: Record<string, unknown>, send: (to: string, msg: Uint8Array) => void, isAlice: boolean);
    handleMessage(from: string, msg: Uint8Array): void;
    run(): Promise<void>;
    output(): Promise<Record<string, unknown>>;
}
//# sourceMappingURL=EmpWasmSession.d.ts.map